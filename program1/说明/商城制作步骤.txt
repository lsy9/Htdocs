前台制作
=======================================
1.公共部分分离
	/public/common/header.php	头部文件
	/public/common/footer.php	底部公共文件
2.路径修改

3.注册页面修改
	/reg.php	=>  提交到 ./doaction.php?act=reg
	验证码引入
		/public/common/yzm.php
		验证码的点击切换

4.用户操作页面	/doaction.php
	注册操作
		1.接收表单传递的数据
		2.检测验证码是否正确，不正确则终止执行，跳转到注册页面并传递错误参数 
			检测两次密码是否一致
			检测用户名是否存在
			errno  1表示验证码错误 2表示两次密码不同 3表示用户名已存在
		3.连接数据库，/public/common/config.php
			设置数据库配置文件
			连接数据库
		4.doaction.php引入数据库连接配置
		5.检测用户名是否存在，存在则返回注册页面，并提示错误信息
			不存在则进行添加数据
		6.同时添加用户详情表信息

5.用户登录页面 /login.php
	1.提交信息到 doaction.php
	2.接收数据并处理
	3.将id存入session中
	4.判断用户是否是每天第一次登录，如果是第一次登录，则增加金币，并修改用户最后登录时间为$time

6.头部文件修改 /public/common/header.php
	检测用户登录状态
	默认优先显示用户昵称
	增加退出功能	./doaction.php?act=layout
	

后台页面设置
=================================
1.公共部分分离 /admin/public/common/

2.后台权限验证 /admin/public/common/check.php
	和老师的有区别，我的不是使用的框架，所以单独列出来
	1.开启session，设置页面字符集
	2.检测用户是否登录
		登录-->检测权限-->权限通过，进入后台
		|			|
		|			---> 权限不通过，提示权限不足，返回首页
		|
		--->没有登录-->跳转到登陆页面
	3.如果管理员从前台登录，则可以直接进入后台，所以在前台登录处理时添加level获取，并写入session中

3.后台登录页面设置	/admin/login.php
	如果已经登录的用户，禁止二次登录

	提交到./doaction.php?act=login

4.后台用户操作处理 /admin/doaction.php
	登录操作 act=login
		1.接收数据
		2.检测验证码是否一致，不一致，返回之前的页面
		3.验证码一致，则检测用户名密码是否一样
		4.验证成功，检测是否是当天第一次登录，修改最后登录时间[增加金币]
	5.退出操作 act=layout
		销毁session
6.公共头部用户名位置显示 /admin/public/common/header.php
	优先显示用户昵称

7.用户管理	/admin/user.php
	1.查询所有的用户信息，基本信息表和详情表同时查询
	2.循环输出到表格中

8.增加函数库文件 /public/common/functions.php

9.header中引入函数库文件
	用户列表调用getLevel()和getSex()

10.用户列表添加分页功能
	
11.添加搜索功能
	1.模糊搜索功能，默认按照用户名搜索
	2.精确搜索功能，使用id进行搜索
	注意事项
		a.搜索时候显示条数为搜索的结果条数
		b.点击下一页等操作时如何保存搜索的结果
12.搜索分页功能实现

13.用户管理操作处理 /admin/user/doaction.php
	a.禁用用户操作
		注意事项
			不是真正的删除用户，而是禁用用户，更改用户的status状态
			查看用户列表显示状态正常的用户
		禁用成功返回之前页面
		禁用失败返回之前页面
14.增加用户黑名单页面	/admin/user/blacklist.php
	分页搜索，启用用户

15.增加路径常量，防止页面报错

16.登录操作提示禁用用户
	1.只能正常用户登录
	2.禁用用户提示用户已禁用

17.后台用户增加操作 /admin/user/add.php
	
	
18.后台用户修改操作 /admin/user/edit.php